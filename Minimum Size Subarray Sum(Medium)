/*
Given an array of n positive integers and a positive integer s, find the minimal length of a contiguous subarray of which the sum â‰¥ s. If there isn't one, return 0 instead.

For example, given the array [2,3,1,2,4,3] and s = 7,
the subarray [4,3] has the minimal length under the problem constraint.

 */
public class Solution {
    public int minSubArrayLen(int s, int[] nums) {
  
        int sum = 0;
        int i, j;
        i = j = 0;
        int min = Integer.MAX_VALUE;
     
        
        while( i < nums.length ){
            
           
            sum += nums[i++];
            
             while( sum >= s && j < nums.length){
                    min = Math.min(min, i-j);
                    sum -= nums[j++];
            
              }
         
        }
        
        return (j == 0) ? 0 : min;
 
    }
}